on:
  release:
    types: [published]

env:
  PRERELEASE_NOT_ON_MAIN_BRANCH: ${{ (github.event.release.prerelease) && !(github.event.release.target_commitish == 'main') }}
  RELEASE_ON_MAIN_BRANCH: ${{ !(github.event.release.prerelease) && (github.event.release.target_commitish == 'main') }}
  GITHUB_REF: ${{ github.ref }}
  GITHUB_ACTOR: ${{ github.actor }}
  GITHUB_COMMITISH: ${{ github.event.release.target_commitish }}
  GITHUB_PRE_RELEASE: ${{ github.event.release.prerelease }}
  GITHUB_RELEASE_NAME: ${{ github.event.release.name}}
  GITHUB_SHA: ${{ github.sha }}

jobs:
  validate:
    uses: ./.github/workflows/validate.yml

  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    needs: [validate]
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1

      - name: ⏬ Checkout repo
        uses: actions/checkout@v4

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Check Tag
        id: check-tag
        run: |
          if [[ $RELEASE_VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "VALID_TAG=true" >> $GITHUB_ENV; else exit 1
          fi

      - name: Exit if wrong (pre-)release or branch conditions
        if: env.PRERELEASE_NOT_ON_MAIN_BRANCH == 'false' && env.RELEASE_ON_MAIN_BRANCH == 'false'
        run: |
          echo "🚨 ALERT: MARS ATTACKS 🛸👾 !!!"
          exit 1

      - name: Exit if wrong actor
        if: github.actor == 'dependabot[bot]'
        run: |
          echo "🚨 ALERT: KILLER ROBOT ATTACKS 🔫🤖 !!!"
          exit 1

      - name: Runs on Pre-Release
        if: env.PRERELEASE_NOT_ON_MAIN_BRANCH == 'true'
        run: |
          echo "This is a Pre-Release"
          echo RELEASE_VERSION $RELEASE_VERSION
          echo GITHUB_REF $GITHUB_REF
          echo GITHUB_ACTOR $GITHUB_ACTOR
          echo GITHUB_COMMITISH $GITHUB_COMMITISH
          echo GITHUB_PRE_RELEASE $GITHUB_PRE_RELEASE
          echo GITHUB_SHA $GITHUB_SHA
          GITHUB_SHA_SHORT=$(echo "$GITHUB_SHA" | cut -c1-7)
          VALID_SEMVER_VERSION=$(echo "$RELEASE_VERSION"-"$GITHUB_SHA_SHORT")
          echo VALID_SEMVER_VERSION "$VALID_SEMVER_VERSION"
          echo "VALID_SEMVER_VERSION=$(echo $RELEASE_VERSION-$GITHUB_SHA_SHORT)" >> $GITHUB_ENV

      - name: Runs on Release
        if: env.RELEASE_ON_MAIN_BRANCH == 'true'
        run: |
          echo "This is a Release"
          echo RELEASE_VERSION $RELEASE_VERSION
          echo GITHUB_REF $GITHUB_REF
          echo GITHUB_ACTOR $GITHUB_ACTOR
          echo GITHUB_COMMITISH $GITHUB_COMMITISH
          echo GITHUB_RELEASE_NAME $GITHUB_RELEASE_NAME
          VALID_SEMVER_VERSION=$(echo "$RELEASE_VERSION")
          echo VALID_SEMVER_VERSION "$VALID_SEMVER_VERSION"
          echo "VALID_SEMVER_VERSION=$(echo $RELEASE_VERSION)" >> $GITHUB_ENV

      - name: Set Version in package.json
        run: |
          echo "`jq '.version="${{env.VALID_SEMVER_VERSION}}"' package.json`" > package.json

      - name: Set Version in jsr.json
        run: |
          echo "`jq '.version="${{env.VALID_SEMVER_VERSION}}"' jsr.json`" > jsr.json

      - name: Read package.json
        run: cat package.json

      - name: Read jsr.json
        run: cat jsr.json

      - name: Publish JSR package
        run: npx jsr publish --dry-run --allow-dirty

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1

      - name: 🏗 Build ✉️🗜
        run: npm run build

      # Setup .npmrc file to publish to npm
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
      - run: npm ci --prefer-offline
      - run: npm publish --provenance --access public --dry-run
